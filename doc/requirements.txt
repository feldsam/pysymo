=== Docs ===

Syslog protocol  - RFC - http://tools.ietf.org/html/rfc5424

Syslog macro - 

    http://www.balabit.com/sites/default/files/documents/syslog-ng-ose-3.3-guides/en/syslog-ng-ose-v3.3-guide-admin-en/html/reference_macros.html
    DB Format
        id       - ModgoDB ID
        host     - $HOST     - The name of the source host where the message originates from.
        facility - $FACILITY - The name of the facility (for example, kern) that sent the message.
        priority - $PRIORITY - The priority (also called severity) of the message, for example, error.
        datetime - $UNIXTIME - message time (eg. $UNIXTIME)
        program  - $PROGRAM  - The name of the program sending the message.
                   Note that the content of the $PROGRAM variable may not be completely trusted as it is provided
                   by the client program that constructed the message.
        msg      - $MSG      -  Text contents of the log message without the program name and pid.
                   Note that this has changed in syslog-ng version 3.0; in earlier versions this macro included the
                   program name and the pid. In syslog-ng 3.0, the MSG macro became equivalent with the MSGONLY macro.
                   The program name and the pid together are available in the MSGHDR macro.

Bootstrap visual editor - http://www.bootply.com/new?visual=1

Bootstrap docs - http://getbootstrap.com/components/

=== AppArmor config ===

    /var/log/audit/audit.log - audit log
    /etc/init.d/boot.apparmor start/stop - start/stop

    /etc/apparmor.d/sbin.syslog-ng - syslog rules config

        /var/lib/mongodb/mongodb.syslog-ng.pipe rw,
        /usr/bin/mongo ix,
        /bin/bash ix,

=== Pipe ===

    # mkfifo /var/lib/mongodb/mongodb.syslog-ng.pipe
    # chmod 640 /var/lib/mongodb/mongodb.syslog-ng.pipe (???)

=== Syslog config ===

    # PIPE
    destination d_mongodb {
            program("/usr/bin/mongo --quiet syslog < /var/lib/mongodb/mongodb.syslog-ng.pipe");
            pipe("/var/lib/mongodb/mongodb.syslog-ng.pipe"
                template("db.messages.insert({host: '$HOST', facility: '$FACILITY', priority: '$PRIORITY', datetime: $UNIXTIME, program: '$PROGRAM', msg: '$MSG'})\n") template-escape(yes));
    };

    # JSON line
    destination d_mongodb {
            program("/usr/local/bin/mongo_piper.py"
                template("{\"h\": \"$HOST\", \"f\": \"$FACILITY\", \"p\": \"$PRIORITY\", \"d\": \"$UNIXTIME\", \"a\": \"$PROGRAM\", \"m\": \"$MSG\"}\n")
                template-escape(yes)
                flush_lines(1)
                flush_timeout(1000)
        );
    };

    log { source(remote); destination(d_mongodb); };

=== Mongo piper ===

    #!/usr/bin/python

    import sys
    import json
    from pymongo import MongoClient

    MONGO_HOST = '127.0.0.1'
    MONGO_PORT = 27017
    MONGO_DATABASE = 'syslog'

    db = MongoClient(host=MONGO_HOST, port=MONGO_PORT)[MONGO_DATABASE]

    try:
        while 1:
            line = sys.stdin.readline()
            if not line:
                break
            data = json.loads(line)
            db['messages'].insert(data)

    except Exception, e:
        f = open('/usr/local/bin/error.txt','ab')
        f.write(e.message)
        f.write('\n')
        f.write(line)
        f.close()
        exit(0)